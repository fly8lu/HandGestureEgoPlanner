// Generated by gencpp from file uav_server/Mode.msg
// DO NOT EDIT!


#ifndef UAV_SERVER_MESSAGE_MODE_H
#define UAV_SERVER_MESSAGE_MODE_H

#include <ros/service_traits.h>


#include <uav_server/ModeRequest.h>
#include <uav_server/ModeResponse.h>


namespace uav_server
{

struct Mode
{

typedef ModeRequest Request;
typedef ModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Mode
} // namespace uav_server


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::uav_server::Mode > {
  static const char* value()
  {
    return "4e20b2f68ee6c802f503418ca4f6f6af";
  }

  static const char* value(const ::uav_server::Mode&) { return value(); }
};

template<>
struct DataType< ::uav_server::Mode > {
  static const char* value()
  {
    return "uav_server/Mode";
  }

  static const char* value(const ::uav_server::Mode&) { return value(); }
};


// service_traits::MD5Sum< ::uav_server::ModeRequest> should match
// service_traits::MD5Sum< ::uav_server::Mode >
template<>
struct MD5Sum< ::uav_server::ModeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::uav_server::Mode >::value();
  }
  static const char* value(const ::uav_server::ModeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::uav_server::ModeRequest> should match
// service_traits::DataType< ::uav_server::Mode >
template<>
struct DataType< ::uav_server::ModeRequest>
{
  static const char* value()
  {
    return DataType< ::uav_server::Mode >::value();
  }
  static const char* value(const ::uav_server::ModeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::uav_server::ModeResponse> should match
// service_traits::MD5Sum< ::uav_server::Mode >
template<>
struct MD5Sum< ::uav_server::ModeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::uav_server::Mode >::value();
  }
  static const char* value(const ::uav_server::ModeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::uav_server::ModeResponse> should match
// service_traits::DataType< ::uav_server::Mode >
template<>
struct DataType< ::uav_server::ModeResponse>
{
  static const char* value()
  {
    return DataType< ::uav_server::Mode >::value();
  }
  static const char* value(const ::uav_server::ModeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // UAV_SERVER_MESSAGE_MODE_H
